// Generated by CoffeeScript 1.4.0
(function() {
  var DBI, Runtime, funclet, loglet;

  loglet = require('loglet');

  funclet = require('funclet');

  DBI = require('easydbi');

  require('easydbi-pg');

  Runtime = (function() {

    function Runtime() {
      this.conns = {};
    }

    Runtime.prototype.connect = function(key, cb) {
      var _this = this;
      if (this.conns.hasOwnProperty(key)) {
        return cb(null);
      } else {
        return DBI.connect(key, function(err, conn) {
          if (err) {
            return cb(err);
          } else {
            _this.conns[key] = conn;
            _this.current = conn;
            return cb(null);
          }
        });
      }
    };

    Runtime.prototype["eval"] = function(cmd, cb) {
      if (!this.current) {
        return cb({
          error: 'no_connection_selected',
          description: 'use :show setups to see the connections or :setup to setup one up.'
        });
      } else {
        return this.current.query(cmd, {}, function(err, rows) {
          if (err) {
            return cb(err);
          } else {
            return cb(null, rows);
          }
        });
      }
    };

    Runtime.prototype.exit = function(cb) {
      var conns, key, val, _ref;
      conns = [];
      _ref = this.conns;
      for (key in _ref) {
        val = _ref[key];
        conns.push(val);
      }
      return funclet.each(conns, function(conn, next) {
        return conn.disconnect(next);
      })["catch"](function(err) {
        return cb(err);
      }).done(function() {
        loglet.log('all connect disconnected.');
        return cb(null);
      });
    };

    return Runtime;

  })();

  module.exports = Runtime;

}).call(this);
